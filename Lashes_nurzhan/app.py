from flask import Flask, render_template, request, redirect, url_for, jsonify
import os
from datetime import datetime
import json
import requests

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'static/uploads'
app.config['DATA_FILE'] = 'data.json'

# üîπ –¢–≤–æ–π Telegram —Ç–æ–∫–µ–Ω –∏ ID (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
BOT_TOKEN = "8418858503:AAFhK6EZxsDgfF4E839xlOgAkWaKiKKV27U"
ADMIN_CHAT_ID = "7541525471"  # —Ç–≤–æ–π Telegram ID

# üîπ –ù–∞—á–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã
prices = {
    "–ö–ª–∞—Å—Å–∏–∫–∞": {"–¢–æ–ø –º–∞—Å—Ç–µ—Ä": 1500, "–ú–∞—Å—Ç–µ—Ä": 1300, "–°—Ç–∞–∂—ë—Ä": 1000, "–£—á–µ–Ω–∏—Ü–∞": 800},
    "2D": {"–¢–æ–ø –º–∞—Å—Ç–µ—Ä": 1700, "–ú–∞—Å—Ç–µ—Ä": 1500, "–°—Ç–∞–∂—ë—Ä": 1200, "–£—á–µ–Ω–∏—Ü–∞": 1000},
    "3D": {"–¢–æ–ø –º–∞—Å—Ç–µ—Ä": 1900, "–ú–∞—Å—Ç–µ—Ä": 1700, "–°—Ç–∞–∂—ë—Ä": 1300, "–£—á–µ–Ω–∏—Ü–∞": 1100},
    "–õ—É—á–∏–∫–∏": {"–¢–æ–ø –º–∞—Å—Ç–µ—Ä": 1600, "–ú–∞—Å—Ç–µ—Ä": 1400, "–°—Ç–∞–∂—ë—Ä": 1100, "–£—á–µ–Ω–∏—Ü–∞": 900},
    "–ú–æ–∫—Ä—ã–π": {"–¢–æ–ø –º–∞—Å—Ç–µ—Ä": 1800, "–ú–∞—Å—Ç–µ—Ä": 1600, "–°—Ç–∞–∂—ë—Ä": 1300, "–£—á–µ–Ω–∏—Ü–∞": 1100},
    "–õ–∏—Å–∏–π": {"–¢–æ–ø –º–∞—Å—Ç–µ—Ä": 1700, "–ú–∞—Å—Ç–µ—Ä": 1500, "–°—Ç–∞–∂—ë—Ä": 1200, "–£—á–µ–Ω–∏—Ü–∞": 1000},
    "–ö—É–∫–æ–ª—å–Ω—ã–π": {"–¢–æ–ø –º–∞—Å—Ç–µ—Ä": 1800, "–ú–∞—Å—Ç–µ—Ä": 1600, "–°—Ç–∞–∂—ë—Ä": 1300, "–£—á–µ–Ω–∏—Ü–∞": 1100}
}

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
if os.path.exists(app.config['DATA_FILE']):
    with open(app.config['DATA_FILE'], 'r', encoding='utf-8') as f:
        records = json.load(f)
else:
    records = []


# üì© –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
def send_telegram_message(text):
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        payload = {"chat_id": ADMIN_CHAT_ID, "text": text}
        requests.post(url, json=payload)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram:", e)


# üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route('/')
def index():
    return render_template('index.html', prices=prices)


# üßæ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
@app.route('/add', methods=['POST'])
def add_record():
    name = request.form['name']
    phone = request.form['phone']
    effect = request.form['effect']
    master = request.form['master']
    date = request.form['date']
    time = request.form['time']
    price = request.form.get('price', '‚Äî')

    # –§–æ—Ç–æ (–µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ)
    photo = None
    if 'photo' in request.files and request.files['photo'].filename != '':
        file = request.files['photo']
        filename = datetime.now().strftime("%Y%m%d%H%M%S_") + file.filename
        path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
        file.save(path)
        photo = filename

    new_record = {
        "id": len(records) + 1,
        "name": name,
        "phone": phone,
        "effect": effect,
        "master": master,
        "price": price,
        "date": date,
        "time": time,
        "photo": photo,
        "status": "–ù–æ–≤–∞—è"
    }

    records.append(new_record)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    with open(app.config['DATA_FILE'], 'w', encoding='utf-8') as f:
        json.dump(records, f, ensure_ascii=False, indent=2)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    msg = f"üíÖ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å!\n\n–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n–≠—Ñ—Ñ–µ–∫—Ç: {effect}\n–ú–∞—Å—Ç–µ—Ä: {master}\n–¶–µ–Ω–∞: {price}\n–î–∞—Ç–∞: {date}\n–í—Ä–µ–º—è: {time}"
    send_telegram_message(msg)

    return redirect(url_for('index'))


# üßç –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@app.route('/admin')
def admin_page():
    return render_template('admin.html', prices=prices)


# üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π
@app.route('/assign')
def assign_page():
    return render_template('assign.html', records=records)


# ‚úèÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
@app.route('/update_price', methods=['POST'])
def update_price():
    data = request.get_json()
    effect = data.get('effect')
    master = data.get('master')
    new_price = data.get('price')
    password = data.get('password')

    if password != "admin123":
        return jsonify({"status": "error", "message": "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!"})

    try:
        prices[effect][master] = int(new_price)
        return jsonify({"status": "success"})
    except Exception as e:
        return jsonify({"status": "error", "message": str(e)})


# ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø–∏—Å—å
@app.route('/confirm/<int:record_id>', methods=['POST'])
def confirm_record(record_id):
    for r in records:
        if r['id'] == record_id:
            r['status'] = '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞'
            with open(app.config['DATA_FILE'], 'w', encoding='utf-8') as f:
                json.dump(records, f, ensure_ascii=False, indent=2)
            send_telegram_message(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞: {r['name']} –Ω–∞ {r['date']} {r['time']}")
            break
    return redirect(url_for('assign_page'))


# ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å
@app.route('/cancel/<int:record_id>', methods=['POST'])
def cancel_record(record_id):
    for r in records:
        if r['id'] == record_id:
            r['status'] = '–û—Ç–º–µ–Ω–µ–Ω–∞'
            with open(app.config['DATA_FILE'], 'w', encoding='utf-8') as f:
                json.dump(records, f, ensure_ascii=False, indent=2)
            send_telegram_message(f"‚ùå –û—Ç–º–µ–Ω–µ–Ω–∞ –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞: {r['name']} ({r['phone']})")
            break
    return redirect(url_for('assign_page'))


if __name__ == "__main__":
    os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)
    app.run(host='0.0.0.0', port=5000, debug=True)
